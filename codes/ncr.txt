nCr[4444][4444]
MOD=----

void pre(){
    for(int i=0;i<=4000;i++)
        nCr[i][0] = 1 ;
    for(int i=1;i<=4000;i++)
        for(int j=1;j<=i;j++)
            nCr[i][j] = ( nCr[i-1][j-1] + nCr[i-1][j] ) % MOD ;
}
nCr = n-1Cr-1 + n-1Cr


Another Code

const int mod = 1e9+7;
int fact[100010];
int inv[100010];

int bin_pow(int o, int s) {
    if (s == 0) return 1;
    if (s == 1) return o % mod;
    int d = bin_pow(o, s/2);
    d = (d * 1ll * d) % mod;
    if (s % 2 == 1)
        d = (d * 1ll * o) % mod;
    return d;
}

int C(int n, int k) {
    int res = 1;
    res = (res * 1ll * fact[n]) % mod;
    res = (res * 1ll * inv[k]) % mod;
    res = (res * 1ll * inv[n-k]) % mod;

    return res;
}
int main(){

long long t ,n,x,y,z,i,j,k ,l,m,r ;
slld(n) ;
slld(r) ;
while(n!=0 && r!=0)
{
fact[0] = inv[0] = 1;
    for(int i = 1; i <= n; ++i) {
            fact[i] = (fact[i-1] * 1ll * i) % mod;
            inv[i] = bin_pow(fact[i], mod-2);

        }


printf("%d\n",C(n,r));
slld(n) ;
slld(r) ;
}
return 0 ;
}
